commit 662224c129049b0ccc67f446618af5bcc4d13430
Author: De Li <de_li@live.com>
Date:   Sat Nov 19 14:27:40 2016 -0800

    P135
    plus a line

diff --git a/mango123/math/EulerMath.java b/mango123/math/EulerMath.java
index 11719ba..6f0e043 100644
--- a/mango123/math/EulerMath.java
+++ b/mango123/math/EulerMath.java
@@ -58,7 +58,7 @@ public final class EulerMath {
             product *= n;
             product /= i;
         }
-		return product;
+        return product;
 	}
 	
 	//TODO: optimize divisorsOf
diff --git a/problems/python/P135/env.yml b/problems/python/P135/env.yml
new file mode 100644
index 0000000..8663fbc
--- /dev/null
+++ b/problems/python/P135/env.yml
@@ -0,0 +1,13 @@
+name: euler
+channels: !!python/tuple
+- defaults
+dependencies:
+- mkl=11.3.3=1
+- numpy=1.11.2=py34_0
+- pip=9.0.1=py34_0
+- python=3.4.5=0
+- setuptools=27.2.0=py34_1
+- vs2010_runtime=10.00.40219.1=2
+- wheel=0.29.0=py34_0
+prefix: C:\Miniconda3\envs\euler
+
diff --git a/problems/python/P135/main.py b/problems/python/P135/main.py
new file mode 100644
index 0000000..a617454
--- /dev/null
+++ b/problems/python/P135/main.py
@@ -0,0 +1,54 @@
+import time
+
+from euler_util import *
+
+START = time.time()
+
+# Brute force...
+N = 1000000
+b = {}
+for a in range(1, N):
+    m = 1
+    c = False
+    while True:
+        x = (a + m / 3)
+        t = 3 * x * x - 4 * m * m / 3
+        t = round(t)
+        if t <= 0:
+            break
+        if t >= N:
+            break
+        if t not in b:
+            b[t] = 0
+        c = True
+        b[t] += 1
+        m += 1
+    n = 3 * a - 1
+    while n > m:
+        x = (a + n / 3)
+        t = 3 * x * x - 4 * n * n / 3
+        t = round(t)
+        if t <= 0:
+            break
+        if t >= N:
+            break
+        if t not in b:
+            b[t] = 0
+        c = True
+        b[t] += 1
+        n -= 1
+    if c:
+        # print("...", m, n, a)
+        continue
+    else:
+        break
+
+total = 0
+for k, v in b.items():
+    if v == 10:
+        total += 1
+print(total)
+
+
+END = time.time()
+print(END - START)
diff --git a/python/main.py b/python/main.py
index dff61be..a617454 100644
--- a/python/main.py
+++ b/python/main.py
@@ -4,31 +4,50 @@ from euler_util import *
 
 START = time.time()
 
-
-# count forms of [1,3,5] [2,4,6] = no need to do equality check
-def f(n, m):
-    return f_h(0, n, m, 0, 0)
-
-
-def f_h(i, n, m, p, q):
-    # print(i, n, m, p, q)
-    if p == m and q == m:
-        return 1
-    if i == n or p > m or q > m:
-        return 0
-    if i + m + m - p - q > n:
-        return 0
-    k = f_h(i + 1, n, m, p, q)
-    k += f_h(i + 1, n, m, p + 1, q)
-    if q + 1 <= p:
-        k += f_h(i + 1, n, m, p, q + 1)
-    return k
-
-n = 12
-k = 0
-for i in range(2, n // 2 + 1):
-    k += nCr(n, i) * nCr(n - i, i) / 2 - f(n, i)
-print(k)
+# Brute force...
+N = 1000000
+b = {}
+for a in range(1, N):
+    m = 1
+    c = False
+    while True:
+        x = (a + m / 3)
+        t = 3 * x * x - 4 * m * m / 3
+        t = round(t)
+        if t <= 0:
+            break
+        if t >= N:
+            break
+        if t not in b:
+            b[t] = 0
+        c = True
+        b[t] += 1
+        m += 1
+    n = 3 * a - 1
+    while n > m:
+        x = (a + n / 3)
+        t = 3 * x * x - 4 * n * n / 3
+        t = round(t)
+        if t <= 0:
+            break
+        if t >= N:
+            break
+        if t not in b:
+            b[t] = 0
+        c = True
+        b[t] += 1
+        n -= 1
+    if c:
+        # print("...", m, n, a)
+        continue
+    else:
+        break
+
+total = 0
+for k, v in b.items():
+    if v == 10:
+        total += 1
+print(total)
 
 
 END = time.time()
